#!/usr/bin/osascript

# Reference:
# - https://github.com/akahan/Nib-Decompiler
# - https://github.com/akahan/Nib-Decompiler/pull/4/files
# - https://stackoverflow.com/questions/25397048/extract-cfkeyedarchiveruid-value
# Tests:
# - ibtool --all decompiled.nib  # almost all data is printable
# - ibtool --upgrade --write upgraded.xib decompiled.nib  # failed silently

use framework "Foundation"
use framework "AppKit"
use scripting additions

global |$|, nil, NSData, NSDictionary, NSError, NSFileManager, ¬
                 NSProcessInfo, NSString, NSWorkspace

on run argv
#{
    try
        local |compiled.nib|

        if count of argv is 1 then
	    set |compiled.nib| to first item of argv
	else
	    error "\n Usage: decompile.ascr <compiled.nib>  #=> ./decompiled.nib\n"
	end if

        set |$| to current application
        set nil to missing value
	set NSData         to  |$|'s class "NSData"
	set NSDictionary   to  |$|'s class "NSDictionary"
	set NSError        to  |$|'s class "NSError"
        set NSFileManager  to  |$|'s class "NSFileManager"
        set NSProcessInfo  to  |$|'s class "NSProcessInfo"
        set NSString       to  |$|'s class "NSString"
        set NSWorkspace    to  |$|'s class "NSWorkspace"

	tell me to decompile(|compiled.nib|)
	set |decompiled.nib| to result

        return |decompiled.nib|
    on error e number n partial result r from o to t
        error e number n partial result r from o to t
    end try
#}
end run

to decompile(|compiled.nib|)
#{
    set |workspace| to NSWorkspace's sharedWorkspace
    set |manager|   to NSFileManager's defaultManager
    set |process|   to NSProcessInfo's processInfo's processIdentifier as text
    set |folder|    to "./decompiled-" & |process| & ".nib"

    if workspace's isFilePackageAtPath:|compiled.nib| then
        set |path| to NSString's stringWithString:|folder|
        set |path| to |path|'s stringByDeletingLastPathComponent
        |manager|'s createDirectoryAtPath:|path| ¬
                    withIntermediateDirectories:true ¬
                    attributes:nil ¬
                    |error|:reference
        assertNoError(result)
        manager's copyItemAtPath:|compiled.nib| ¬
                  toPath:|folder| ¬
                  |error|:reference
        assertNoError(result)
    else
        |manager|'s createDirectoryAtPath:|folder| ¬
                    withIntermediateDirectories:true ¬
                    attributes:nil ¬
                    |error|:reference
        assertNoError(result)
        manager's copyItemAtPath:|compiled.nib| ¬
                  toPath:(|folder| & "/keyedobjects.nib") ¬
                  |error|:reference
        assertNoError(result)
    end if

    set |nibs| to { ¬
        { ¬
            "info.nib", ¬
            "
            PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPCFET0NUWVBF
            IHBsaXN0IFBVQkxJQyAiLS8vQXBwbGUgQ29tcHV0ZXIvL0RURCBQTElTVCAxLjAv
            L0VOIiAiaHR0cDovL3d3dy5hcHBsZS5jb20vRFREcy9Qcm9wZXJ0eUxpc3QtMS4w
            LmR0ZCI+CjxwbGlzdCB2ZXJzaW9uPSIxLjAiPgoJPGRpY3QvPgo8L3BsaXN0Pgo=
            " ¬
        }, { ¬
            "classes.nib", ¬
            "ewoJSUJDbGFzc2VzID0gKCk7CglJQlZlcnNpb24gPSAxOwp9Cg==" ¬
        } ¬
    }

    repeat with |nib| in |nibs|
        set |path| to |folder| & "/" & item 1 of |nib|
        set |data| to NSData's alloc()'s ¬
                      initWithBase64EncodedString:(item 2 of |nib|) ¬
                      options:(|$|'s NSDataBase64DecodingIgnoreUnknownCharacters)
        manager's createFileAtPath:|path| |contents|:|data| attributes:nil
        assertFileWriteOK(result, |path|)
    end

    return |folder|
#}
end decompile

to assertNoError({|ok|, |error|})
    if not |ok| then
        error |error|'s localizedDescription as text
    end if
end assertNoError

to assertFileWriteOK(|ok|, |path|)
    if not |ok| then
        NSError's errorWithDomain:(|$|'s NSCocoaErrorDomain) ¬
                  code:(|$|'s NSFileWriteUnknownError) ¬
                  userInfo:(NSDictionary's dictionaryWithObject:|path| ¬
                                           forKey:(|$|'s NSFilePathErrorKey))
        error result's localizedDescription as text
    end if
end assertFileWriteOK
